$date
	Fri Nov 16 12:55:13 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 4 ! S [3:0] $end
$var wire 1 " c $end
$var wire 1 # v $end
$var reg 4 $ A [3:0] $end
$var reg 4 % B [3:0] $end
$var reg 1 & m $end
$scope module bs $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 4 ) C [3:0] $end
$var wire 4 * P [3:0] $end
$var wire 4 + S [3:0] $end
$var wire 1 " c $end
$var wire 1 , m $end
$var wire 1 # v $end
$scope module fullAdder1 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / cin $end
$var wire 1 0 cout $end
$var wire 1 1 p $end
$var wire 1 2 s $end
$upscope $end
$scope module fullAdder2 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 cin $end
$var wire 1 6 cout $end
$var wire 1 7 p $end
$var wire 1 8 s $end
$upscope $end
$scope module fullAdder3 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < cout $end
$var wire 1 = p $end
$var wire 1 > s $end
$upscope $end
$scope module fullAdder4 $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 A cin $end
$var wire 1 " cout $end
$var wire 1 B p $end
$var wire 1 C s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
b0 +
b0 *
b0 )
b0 (
b0 '
0&
b0 %
b0 $
0#
0"
b0 !
$end
#100
1>
1;
16
1"
0#
15
1A
0C
10
08
1<
1B
17
12
b101 !
b101 +
1-
19
1?
1.
14
1:
1/
b1101 *
b10 %
b10 (
b111 $
b111 '
1&
b1111 )
1,
#300
08
0#
05
1A
07
12
00
0>
1<
b1101 )
1C
b1001 !
b1001 +
0-
13
01
1=
0B
b1110 *
0.
0:
1@
b1 %
b1 (
b1010 $
b1010 '
#600
0#
18
15
1A
0C
1"
10
1<
b1111 )
1B
02
0>
b10 !
b10 +
09
0?
11
1=
b10 *
1.
1:
b1101 %
b1101 (
b1111 $
b1111 '
#1000
1;
0A
0#
12
08
16
0<
b111 )
0"
01
17
1>
0C
b101 !
b101 +
1-
03
0=
0B
b1 *
0:
0@
b1110 %
b1110 (
b11 $
b11 '
#2600
0>
0;
05
06
00
08
07
02
b0 !
b0 +
0-
0.
04
0/
b0 *
b0 %
b0 (
b0 $
b0 '
0&
b0 )
0,
